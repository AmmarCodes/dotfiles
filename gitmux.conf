tmux:
    symbols:
        branch: ""
        hashprefix: ":"
        ahead: ↑·
        behind: ↓·
        staged: "● "
        clean: ✔
        conflict: "󰕚 "
        untracked: "󱀶 "
        modified: " "
        stashed: " "
        insertions: " "
        deletions: " "

    styles:
        clear: "#[none]"
        state: "#[fg=red,bold]"
        branch: "#[fg=white,bold]"
        remote: "#[fg=cyan]"
        divergence: "#[fg=yellow]"
        staged: "#[fg=green,bold]"
        conflict: "#[fg=red,bold]"
        modified: "#[fg=red,bold]"
        untracked: "#[fg=magenta,bold]"
        stashed: "#[fg=cyan,bold]"
        insertions: "#[fg=green]"
        deletions: "#[fg=red]"
        clean: "#[fg=green,bold]"

    # The layout section defines what components gitmux shows and the order in
    # which they appear on tmux status bar.
    #
    # Allowed components:
    #  - branch:            local branch name. Examples: `⎇ main`, `⎇ :345e7a0` or `[rebase]`
    #  - remote-branch:     remote branch name, for example: `origin/main`.
    #  - divergence:        divergence between local and remote branch, if any. Example: `↓·2↑·1`
    #  - remote:            alias for `remote-branch` followed by `divergence`, for example: `origin/main ↓·2↑·1`
    #  - flags:             symbols representing the working tree state, for example `✚ 1 ⚑ 1 … 2`
    #  - stats:             insertions/deletions (lines), for example`Σ56 Δ21`
    #  - some string `foo`: any other character of string is directly shown, for example `foo` or `|`
    layout: [branch, divergence, flags]

    # Additional configuration options.
    options:
        # Maximum displayed length for local and remote branch names.
        branch_max_len: 0
        # Trim left, right or from the center of the branch (`right`, `left` or `center`).
        branch_trim: right
        # Character indicating whether and where a branch was truncated.
        ellipsis: …
        # Hides the clean flag
        hide_clean: false
        # Swaps order of behind & ahead upstream counts - "↓·1↑·1" -> "↑·1↓·1".
        swap_divergence: false
        # Add a space between behind & ahead upstream counts.
        divergence_space: false
